@using EMSuiteVisualConfigurator.Application.DTOs
@using EMSuiteVisualConfigurator.Client.Components;
@using EMSuiteVisualConfigurator.Shared.Models
@using Microsoft.JSInterop
@inject IJSRuntime JS;

@page "/configuration"
<PageTitle>EMSuite Visual Configurator</PageTitle>
<CascadingValue Value="@ConfigurationDTO">
	<div class="container-fluid">
		@foreach (SiteDTO site in ConfigurationDTO.Sites){
			<SiteComponent display=@site.Display siteId=@site.Id/>
		}
		<div class="row no-gutters" style="width: 100%">
			@foreach (SiteDTO site in ConfigurationDTO.Sites){
				<div class="bg-secondary w-auto">
					<button @onclick="()=> switchSite(site)" class="btn btn-secondary w-auto">Site</button>
					@if (ConfigurationDTO.Sites.Count != 1) {
						<button @onclick="()=> deleteSite(site)" class="btn btn-danger btn-circle delete-text">X</button>
					}
				</div>
			}

			<button class="w-auto" @onclick="addSite">+</button>
		</div>
	</div>
</CascadingValue>


@code {
	public EMSuiteConfigurationDTO ConfigurationDTO { get; set; } = new EMSuiteConfigurationDTO();
	public SiteDTO ActiveSite { get; set; }

	public void addSite(){
		SiteDTO newSite = new SiteDTO();
		ConfigurationDTO.Sites.Add(newSite);
		deactivateCurrentSite();
		ActiveSite = newSite;
	}
	public void deactivateCurrentSite(){
		ActiveSite = ConfigurationDTO.Sites[0];
		ActiveSite.Display = "none";
	}

	public void activateSite(SiteDTO site){
		ActiveSite = site;
		site.Display = "inline";
	}

	public void switchSite(SiteDTO site) {
		deactivateCurrentSite();
		activateSite(site);
	}

	public void deleteSite(SiteDTO site){
		bool wasActive = site == ActiveSite;
		ConfigurationDTO.Sites.Remove(site);
		if(wasActive){
			switchSite(ConfigurationDTO.Sites[0]);
		}
	}
}
